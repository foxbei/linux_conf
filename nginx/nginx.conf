#运行用户
user nginx nginx;
#启动进程
worker_processes 2; 
#全局错误日志及PID文件
error_log /var/log/nginx/error.log crit;

pid        /var/run/nginx.pid;

#工作模式及连接数上限
worker_rlimit_nofile 8192;
events {
        use epoll;
        worker_connections 8192; 
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
 http {
	#设定mime类型
	include       	mime.types;
	default_type	application/octet-stream;
 
	server_names_hash_bucket_size	128;
	client_header_buffer_size			32k;
	large_client_header_buffers		4 32k;
 
	client_max_body_size 8m;

	sendfile       	on;
	tcp_nopush	on;

	keepalive_timeout 60;

	tcp_nodelay	on;

	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;

	gzip on;
	gzip_min_length	1k;
	gzip_buffers		4 16k;
	gzip_http_version	1.0;
	gzip_comp_level	2;
	gzip_types	text/plain application/x-javascript text/css application/xml;
	gzip_vary on;
	server
	{
		listen       80;
		server_name  localhost;
		index index.html index.htm index.php;
		#自动索引
		autoindex on;
		autoindex_exact_size off;
		autoindex_localtime on;
		root  /var/www;

		if (-d $request_filename) {
			rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;
		}
   
		location ~ .*\.(php|php5)?$ {
			fastcgi_pass  localhost:9000;
			fastcgi_index index.php;
			include fastcgi_params;
			fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		}

		location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
		{
			expires      30d;
		}

		location ~ .*\.(js|css)?$
		{
			expires      1h;
		}
		#设定日志格式
		log_format access
			'$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" $http_x_forwarded_for';
		
		access_log /var/log/nginx/access.log access;
 }


}
